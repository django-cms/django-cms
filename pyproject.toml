[build-system]
build-backend = "setuptools.build_meta"

requires = [ "setuptools", "setuptools-scm" ]

[project]
name = "django-cms"
description = "Lean enterprise content management powered by Django."
readme = "README.rst"
license = { text = "BSD-3-Clause" }
maintainers = [
  { name = "Django CMS Association and contributors", email = "info@django-cms.org" },
]
authors = [
  { name = "Django CMS Association and contributors", email = "info@django-cms.org" },
]
requires-python = ">=3.9"

classifiers = [
  "Environment :: Web Environment",
  "Framework :: Django",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Framework :: Django",
  "Framework :: Django :: 4.2",
  "Framework :: Django :: 5.0",
  "Framework :: Django :: 5.1",
  "Framework :: Django :: 5.2",
  "Topic :: Internet :: WWW/HTTP",
  "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
  "Topic :: Software Development",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Application Frameworks",
]
dynamic = [ "version" ]
dependencies = [
  "Django >= 4.2",
  "django-classy-tags >=0.7.2",
  "django-formtools >=2.1",
  "django-treebeard >=4.3",
  "django-sekizai >=0.7",
]

[project.optional-dependencies]
admin-style = ["djangocms-admin-style>=1.2"]

[project.urls]
"Homepage" = "https://www.django-cms.org/"
"Documentation" = "https://docs.django-cms.org/"
"Release notes" = "https://docs.django-cms.org/en/latest/upgrade/index.html"
"Community" = "https://discord-support-channel.django-cms.org"
"Source" = "https://github.com/django-cms/django-cms"

[project.scripts]
djangocms = "cms.management.djangocms:execute_from_command_line"

[tool.setuptools]
packages = [ "cms", "menus" ]
include-package-data = true

[tool.setuptools.dynamic]
version = { attr = "cms.__version__" }

[tool.flake8]
max-line-length = 119
exclude = [
  ".env",
  ".venv",
  "**/migrations/**",
]

[tool.ruff]
# https://beta.ruff.rs/docs/configuration/
line-length = 119

extend-exclude = [
  ".ruff_cache",
  ".env",
  ".venv",
  "**migrations/**",
]

[tool.ruff.lint]
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "C",  # flake8-comprehensions
  "B",  # flake8-bugbear
  "PLE", # pylint error
  "PLR", # pylint refactor
  "PLW", # pylint warning
  "UP", # pyupgrade
]

extend-ignore = [
  "C901",     # Too complex
  "PLR0911",  # Too many return statements
  "PLR0912",  # Too many branches
  "PLR0913",  # Too many arguments to function call
  "PLR0915",  # Too many statements

  # TODO fix separately
  "B006",
  "B007",
  "B027",
  "B028",
  "B018",
  "B020",
  "B024",  # abstract base class, but has no abstract method
  "B026",
  "B904",
  "C400",
  "C402",
  "C405",
  "C408",
  "C414",
  "C416",
  "E701",
  "F401",
  "F403",
  "E501",
  "PLR2004",
  "PLR5501",
  "PLW0120",
  "PLW0603",
  "PLW0602",
  "PLW2901",
  "UP028",
  "UP030",
  "UP031",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
  "F401"  # unused-import
]
"menus/menu_pool.py" = [
  "PLW2901",  # `for` loop variable `menu_cls` overwritten by assignment target
]
"cms/toolbar/utils.py" = [
  "B020"  # Loop control variable `plugin` overrides iterable it iterates
]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
docstring-code-line-length = 80

[tool.codespell]
ignore-words-list = "cant,statics,groupe,manuel,uptodate,assertIn"
skip = "package-lock.json,*.js,*.js.html,*.po,./node_modules/*,./.idea/*,./docs/env/*,./docs/build/*,./.env/*,./.venv/*,./build/*,./django_cms.egg-info/*,./.git,./cms/test_utils/project/sampleapp/models.py,./venv/*,./docs/spelling_wordlist"
